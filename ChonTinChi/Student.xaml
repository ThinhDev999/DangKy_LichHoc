<Page x:Class="ChonTinChi.Student"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ChonTinChi"
      xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
       mc:Ignorable="d" 
      d:DesignHeight="600" d:DesignWidth="800"
      Title="Class"
      x:Name="_window"
      Loaded="Window_Loaded">

    <Page.Resources>

        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#222528"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="Margin" Value="0 10 0 0"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="True"/>
            <Setter Property="CanUserReorderColumns" Value="False"/>
            <Setter Property="CanUserResizeColumns" Value="False"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="ColumnWidth" Value="*"/>
            <Setter Property="GridLinesVisibility" Value="None"/>


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="textboxSearch1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#ffffff"/>
            <Setter Property="Foreground" Value="#b0b9c6"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="15 10"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0 0"/>
            <Setter Property="Height" Value="20"/>


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border x:Name="border" 
                                CornerRadius="30" 
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True"
                                BorderThickness="1"
                                BorderBrush="#e0e6ed"
                                >
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" 
                                     Value="True">
                                <Setter Property="BorderBrush" 
                                        Value="#d9d9d9"
                                        TargetName="border"/>


                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" 
                                     Value="True">
                                <Setter Property="BorderBrush" 
                                        Value="#d9d9d9"
                                        TargetName="border"/>


                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="textboxFilter1" TargetType="{x:Type TextBox}" BasedOn="{StaticResource ResourceKey=textboxSearch1}">



            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border x:Name="border" 
                                CornerRadius="20"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True"
                                BorderThickness="1"
                                BorderBrush="#e0e6ed"
                                >
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" 
                                     Value="True">
                                <Setter Property="BorderBrush" 
                                        Value="#d9d9d9"
                                        TargetName="border"/>


                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" 
                                     Value="True">
                                <Setter Property="BorderBrush" 
                                        Value="#d9d9d9"
                                        TargetName="border"/>


                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridRowStyle2" TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Margin" Value="0 10 0 0"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
            <Setter Property="ValidationErrorTemplate">

                <Setter.Value>
                    <ControlTemplate>
                        <TextBlock Foreground="Red" Margin="2,0,0,0" VerticalAlignment="Center"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="7">
                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                                <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                            </SelectiveScrollingGrid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>


                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#623ed0"/>
                    <Setter Property="Foreground" Value="White"/>

                </Trigger>


                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#623ed0"/>
                    <Setter Property="Foreground" Value="White"/>

                </Trigger>


                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>

                </MultiTrigger>

            </Style.Triggers>
        </Style>
        <Style x:Key="topButtonIcon"
               TargetType="{x:Type Icon:PackIconMaterial}">

            <Setter Property="Height" Value="15"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="0 0 10 0"/>

        </Style>

        <Style x:Key="addToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="#6741d9"/>
            <Setter Property="Foreground" Value="#ffffff"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="140"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>

            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Grid.Row" Value="1"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="7">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Red"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderBrush" Value="#FF6E00FF"/>
                    <Setter Property="BorderThickness" Value="20"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>
    <Border CornerRadius="0 0 30 0" Background="#eff2f7">
        <Grid Background="Transparent" Margin="0 0 0 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="70"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="60"/>

            </Grid.RowDefinitions>

            <Grid Width="339"
                      HorizontalAlignment="Left"
                      Grid.Row="1" Margin="100,0,0,0">

                <TextBlock Margin="10"
                               VerticalAlignment="Center"
                               Foreground="#b0b9C6"
                               IsHitTestVisible="False"
                               Panel.ZIndex="1"
                               Text="Search here ..." 
                               
                           Visibility="{Binding ElementName=txtFilter,Path=Text.IsEmpty,Converter={StaticResource BoolToVis}}"
                              />

                <TextBox x:Name="txtFilter" Padding="10"
                               Style="{StaticResource textboxFilter1}" Margin="0,0,-70,0" Height="40"/>



            </Grid>
            <!--#region BUTTON NEW STUDENT -->
            <!--
            <Button Style="{StaticResource addButton}" Grid.Row="1" Click="NewStudent_Click" >




                <StackPanel Orientation="Horizontal">
                    <Icon:PackIconMaterial Kind="AccountPlus"
                          Style="{StaticResource topButtonIcon}"
                                           />
                    <TextBlock Text="New Student"/>
                </StackPanel>
            </Button>
            -->
            <!--#endregion-->

            <Border Background="#FF00FFD7"
                    Grid.Row="0"
                    CornerRadius="30"
                    Margin="50 10 50 10"
                   
                    >

                <TextBlock 
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            FontSize="18"
                            Foreground="White"
                   
                    >
                    <Bold >
                        <TextBlock Text="Student"
                                   ></TextBlock>
                    </Bold>
                    
                </TextBlock>
            </Border>

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>

                </Grid.ColumnDefinitions>

                <!--#region DATAGRID -->

                <DataGrid Grid.Column="0"
                       ItemsSource="{Binding DataTable}"
                          ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" 
                          CellStyle="{DynamicResource DataGridCellStyle1}" 
                          Style="{DynamicResource DataGridStyle}"
                          x:Name="membersDataGrid" RowStyle="{DynamicResource DataGridRowStyle2}" RowEditEnding="DataGrid_RowEditEnding" SelectionChanged="DataGrid_SelectionChanged">

                    <DataGrid.Columns>

                        <!--
                    <DataGridCheckBoxColumn CanUserResize="False" Width="auto" ElementStyle="{StaticResource CheckBoxStyle1}">
                        <DataGridCheckBoxColumn.HeaderTemplate>
                            <DataTemplate>
                                <CheckBox Style="{StaticResource CheckBoxStyle1}" />
                            </DataTemplate>
                        </DataGridCheckBoxColumn.HeaderTemplate>
                    </DataGridCheckBoxColumn>

                    <DataGridTextColumn Header="#" IsReadOnly="True" CanUserResize="False" Width="50" Binding="{Binding Number}"/>
-->
                        <!--
                    <DataGridTemplateColumn Header="Member" IsReadOnly="True" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Border Width="25" Height="25" CornerRadius="50" Margin="0 0 10 0" Background="{Binding BgColor}">
                                        <TextBlock Text="{Binding Character}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" Margin="0 0 0 1"/>
                                    </Border>
                                    <TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
-->
                        <!--
                    <DataGridTemplateColumn Header="Mã Sinh Viên" 
                                             IsReadOnly="True" Width="Auto">
                        
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>

                                <TextBox Text="{Binding Ma_sinh_vien}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                              />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        
                    </DataGridTemplateColumn>
-->
                        <DataGridTextColumn Header="Mã Sinh Viên"
                                        Width="Auto"
                                        IsReadOnly="True"
                                        
                                        Binding="{Binding Ma_sinh_vien, UpdateSourceTrigger=PropertyChanged}"
                                        
                                        >



                        </DataGridTextColumn>
                        <!--
                    <DataGridTemplateColumn Header="Tên Đăng Nhập"
                                             IsReadOnly="True" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>

                                <TextBlock Text="{Binding Ten_dang_nhap}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                               Width="Auto"/>

                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    -->
                        <DataGridTextColumn Header="Tên Đăng Nhập"
                                        Width="Auto"
                                        Binding="{Binding Ten_dang_nhap, UpdateSourceTrigger=PropertyChanged}">

                        </DataGridTextColumn>
                        <!--
                    <DataGridTemplateColumn Header="Mật Khẩu"
                                             IsReadOnly="True" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>

                                <TextBlock Text="{Binding Mat_khau}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                               Width="Auto"/>

                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    -->
                        <DataGridTextColumn Header="Mật Khẩu"
                                        Width="Auto"
                                        Binding="{Binding Mat_khau,UpdateSourceTrigger=PropertyChanged}">

                        </DataGridTextColumn>
                        <!--
                    <DataGridTemplateColumn Header="Họ Tên"
                                             IsReadOnly="True" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">


                                    <TextBlock Text="{Binding Name}"
                                               Width="Auto"/>


                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    -->
                        <DataGridTextColumn Header="Họ Tên"
                                        Width="Auto"
                                        Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}">

                        </DataGridTextColumn>
                        <!--
                    <DataGridTemplateColumn Header="Khoa Học"
                                             IsReadOnly="True" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>

                                <TextBlock Text="{Binding Khoa_hoc}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                               Width="Auto"/>

                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    -->
                        <DataGridTextColumn Header="Khoa Học"
                                        Width="Auto"
                                        Binding="{Binding Khoa_hoc, UpdateSourceTrigger=PropertyChanged}">

                        </DataGridTextColumn>


                        <!--
                    <DataGridTemplateColumn Header="Mã Ngành"
                                             IsReadOnly="True" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>

                                <TextBlock Text="{Binding Ma_nganh}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                               Width="Auto"/>

                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    -->
                        <DataGridTextColumn Header="Mã Ngành"
                                        Width="Auto"
                                        Binding="{Binding Ma_nganh, UpdateSourceTrigger=PropertyChanged}">

                        </DataGridTextColumn>


                        <!--#region BUTTON SỬA XOÁ DATAGRID -->

                        <DataGridTemplateColumn Header="Operations" Width="Auto">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Button x:Name="button_sua"
                                        Style="{StaticResource gridEditButton}" Click="EditButton_Click"
                                            >
                                            <Icon:PackIconMaterial Kind="PencilOutline" Style="{StaticResource gridButtonIcon}"/>
                                        </Button>

                                        <Button x:Name="button_xoa"
                                        Style="{StaticResource griRemoveButton}" Margin="5 0 0 0" 
                                           
                                             Click="RemoveButton_Click">
                                            <Icon:PackIconMaterial Kind="DeleteOutline" Style="{StaticResource gridButtonIcon}"/>
                                        </Button>

                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--#endregion-->




                    </DataGrid.Columns>

                </DataGrid>
                <!--#endregion-->

                <Grid x:Name="Menu_Container"
                       Width="50"
                        HorizontalAlignment="Left"
                        Background="Transparent"
                        Margin="10,104,0,77" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.1*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>



                    <!--// Menu Slide Out Panel //-->

                    <Border x:Name="Menu_Sliding_Panel"
                    Background="red"
                    BorderBrush="#FFFFFF"
                    BorderThickness="0,0,0,5"
                    CornerRadius="8"
                    Grid.Row="1"
                  
                    HorizontalAlignment="Left" Margin="50,0,52,0" Width="200" />

                    <Grid Grid.Row="0">


                        <ToggleButton x:Name="Menu_ToggleButton"
                              Height="50"
                              Width="50"
                              HorizontalAlignment="Left"
                            
                              Margin="0,0,0,0">

                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">

                                                <Border x:Name="border" 
                                                        Background="Aqua"
                                                Margin="-30,-150,30,150"
                                                CornerRadius="5"/>




                                                <ControlTemplate.Triggers>

                                                    <Trigger Property="ToggleButton.IsMouseOver"
                                                     Value="true">

                                                        <Setter Property="Background"
                                                        TargetName="border"
                                                        Value="#FF8C00" />

                                                    </Trigger>

                                                    <Trigger Property="ToggleButton.IsChecked"
                                                     Value="true">

                                                        <Setter Property="Background"
                                                        TargetName="border"
                                                        Value="#FF8C00" />
                                                    </Trigger>

                                                </ControlTemplate.Triggers>

                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>


                            <ToggleButton.Triggers>

                                <EventTrigger RoutedEvent="ToggleButton.Checked">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Menu_Container"
                                                     Storyboard.TargetProperty="Width"
                                                     From="50"
                                                     To="200"
                                                     DecelerationRatio="0.6"
                                                     Duration="0:0:0" />
                                        </Storyboard>
                                    </BeginStoryboard>

                                </EventTrigger>

                                <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Menu_Container"
                                                     Storyboard.TargetProperty="Width"
                                                     From="200"
                                                     To="50"
                                                     DecelerationRatio="0.9"
                                                     Duration="0:0:0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>


                            </ToggleButton.Triggers>

                        </ToggleButton>
                    </Grid>
                </Grid>
            </Grid>

            <Border Grid.Row="3"
                        HorizontalAlignment="Right"
                        BorderBrush="#dee4ec"
                        BorderThickness="1"
                        CornerRadius="5"
                        Padding="5"
                        Background="White"
                        Margin="0 10 10 10"
                        >

                <StackPanel Orientation="Horizontal">

                    <Button Style="{StaticResource pagingButton}">
                        <Icon:PackIconMaterial Kind="ChevronLeft"
                                  Style="{StaticResource pagingButtonIcon}"/>
                    </Button>


                    <Rectangle Width="1"
                                   Fill="#dedede"
                                   Margin="3 7"/>

                    <Button Style="{StaticResource pagingButton}" Content="1"/>
                    <Button Style="{StaticResource pagingButton}" Content="2" Background="#7950f2" Foreground="#ffffff"/>
                    <Button Style="{StaticResource pagingButton}" Content="3"/>

                    <TextBlock Text="..."
                                   Foreground="#6c7682"
                                   VerticalAlignment="Center"
                                   FontSize="15"
                                   Margin="15 0"/>

                    <Button Style="{StaticResource pagingButton}" Content="7"/>
                    <Button Style="{StaticResource pagingButton}" Content="8" />
                    <Button Style="{StaticResource pagingButton}" Content="9"/>


                    <Rectangle Width="1"
                                   Fill="#dedede"
                                   Margin="3 7"/>


                    <Button Style="{StaticResource pagingButton}">
                        <Icon:PackIconMaterial Kind="ChevronRight"
                                  Style="{StaticResource pagingButtonIcon}"/>
                    </Button>



                </StackPanel>


            </Border>

        </Grid>
    </Border>
</Page>
